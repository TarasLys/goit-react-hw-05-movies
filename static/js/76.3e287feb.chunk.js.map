{"version":3,"file":"static/js/76.3e287feb.chunk.js","mappings":"2OACA,EAA+B,2BAA/B,EAAsE,wBAAtE,EAAyG,uBAAzG,EAA2I,uB,kBCgD3I,MA5CA,WACE,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEZI,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,EAAAA,EAAAA,IAAU,sCAADC,OACQb,EAAO,YAC7C,CACEc,QAAS,CACPC,cACE,gOAGN,KAAD,EARKP,EAAQC,EAAAO,KASdjB,EAAQS,EAASS,KAAKnB,MAAM,wBAAAW,EAAAS,OAAA,GAAAX,EAAA,KAC7B,kBAXc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAYfjB,GACF,GAAG,CAACH,KAEFqB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBH,SAC7BxB,EAAK4B,KAAI,SAAAC,GAAK,OACbJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcH,UAC3BD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAaH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXG,IAAG,mCAAAf,OAAqCc,EAAME,cAC9CC,IAAI,GACJC,MAAO,IACPC,OAAQ,OAEVT,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAMM,QACVZ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYK,EAAMO,iBAVUP,EAAMQ,GAYpC,QAKf,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imageGallery\":\"Cast_imageGallery__bWhAr\",\"actorList\":\"Cast_actorList__0r4HV\",\"actorImg\":\"Cast_actorImg__T6qL2\",\"actorDiv\":\"Cast_actorDiv__6PRFi\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from '../Cast/Cast.module.css';\nimport axios from 'axios';\n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n        {\n          headers: {\n            Authorization:\n              'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjY2IzYWZhYzhlOTMyOWI1YWJkMzVjNmRmMzY5MjUzZCIsInN1YiI6IjY1ODJmM2Y4ZTI5NWI0M2MwMDY4NjI0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xgYP1rdb0GROreyEVhfVlLLdJA-VoS5Yhwr_rvgSydo',\n          },\n        }\n      );\n      setCast(response.data.cast);\n    };\n    fetchCast();\n  }, [movieId]);\n  return (\n    <div>\n      <h2>The cast of this film</h2>\n      <ul className={css.imageGallery}>\n        {cast.map(actor => (\n          <li className={css.actorList} key={actor.id}>\n            <div className={css.actorDiv}>\n              <img\n                className={css.actorImg}\n                src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                alt=\"\"\n                width={170}\n                height={255}\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","headers","Authorization","sent","data","stop","apply","arguments","_jsxs","children","_jsx","className","css","map","actor","src","profile_path","alt","width","height","name","character","id"],"sourceRoot":""}